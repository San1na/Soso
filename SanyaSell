repeat task.wait() until game:IsLoaded()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
repeat task.wait() until not LocalPlayer.PlayerGui:FindFirstChild("__INTRO")

local Library = game.ReplicatedStorage.Library
local Client = Library.Client
local Network = require(Client.Network)
local Savemod = require(Client.Save)
local RAPCmds = require(Client.RAPCmds)

-- === GUI SETUP ===
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.Name = "AutoSellerGui"
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 260, 0, 380)  -- Increased the size of the frame to accommodate more elements
Frame.Position = UDim2.new(0, 20, 0, 20)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

-- ‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞
local CloseButton = Instance.new("TextButton", Frame)
CloseButton.Text = "‚ùå"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextScaled = true
CloseButton.MouseButton1Click:Connect(function()
    Frame.Visible = false
end)

-- === GUI –≠–ª–µ–º–µ–Ω—Ç—ã ===
local function createTextBox(parent, posY, placeholder)
    local box = Instance.new("TextBox", parent)
    box.PlaceholderText = placeholder
    box.Size = UDim2.new(1, -20, 0, 30)
    box.Position = UDim2.new(0, 10, 0, posY)
    box.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    box.TextColor3 = Color3.new(1,1,1)
    box.ClearTextOnFocus = false
    return box
end

local ItemBox = createTextBox(Frame, 40, "Item ID (–Ω–∞–ø—Ä–∏–º–µ—Ä: HugePony)")
local PriceBox = createTextBox(Frame, 80, "Price (—á–∏—Å–ª–æ –∏–ª–∏ % –æ—Ç RAP)")

-- // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∫–æ—Å—Ç–∏
local function createToggleButton(parent, posY, label, default)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(1, -20, 0, 30)
    btn.Position = UDim2.new(0, 10, 0, posY)
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.SourceSans
    btn.TextScaled = true
    btn.Text = label .. ": " .. (default and "ON" or "OFF")
    return btn
end

local rainbow, golden, shiny, autoStart = false, false, false, false
local selling = false  -- Track whether the selling process is ongoing

local RainbowToggle = createToggleButton(Frame, 120, "üåà Rainbow", rainbow)
local GoldenToggle  = createToggleButton(Frame, 160, "‚≠ê Golden", golden)
local ShinyToggle   = createToggleButton(Frame, 200, "‚ú® Shiny", shiny)
local AutoStartToggle = createToggleButton(Frame, 240, "‚úÖ AutoStart", autoStart)

local SellButton = Instance.new("TextButton", Frame)
SellButton.Text = "üöÄ Start Selling"
SellButton.Size = UDim2.new(1, -20, 0, 30)
SellButton.Position = UDim2.new(0, 10, 0, 280)
SellButton.BackgroundColor3 = Color3.fromRGB(50, 200, 100)
SellButton.TextColor3 = Color3.new(1,1,1)
SellButton.Font = Enum.Font.SourceSansBold
SellButton.TextScaled = true

local StopButton = Instance.new("TextButton", Frame)  -- New button to stop selling
StopButton.Text = "‚ùå Stop Selling"
StopButton.Size = UDim2.new(1, -20, 0, 30)
StopButton.Position = UDim2.new(0, 10, 0, 320)
StopButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
StopButton.TextColor3 = Color3.new(1,1,1)
StopButton.Font = Enum.Font.SourceSansBold
StopButton.TextScaled = true

-- // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
RainbowToggle.MouseButton1Click:Connect(function()
    rainbow = not rainbow
    RainbowToggle.Text = "üåà Rainbow: " .. (rainbow and "ON" or "OFF")
end)

GoldenToggle.MouseButton1Click:Connect(function()
    golden = not golden
    GoldenToggle.Text = "‚≠ê Golden: " .. (golden and "ON" or "OFF")
end)

ShinyToggle.MouseButton1Click:Connect(function()
    shiny = not shiny
    ShinyToggle.Text = "‚ú® Shiny: " .. (shiny and "ON" or "OFF")
end)

AutoStartToggle.MouseButton1Click:Connect(function()
    autoStart = not autoStart
    AutoStartToggle.Text = "‚úÖ AutoStart: " .. (autoStart and "ON" or "OFF")
end)

-- === –õ–û–ì–ò–ö–ê –ü–†–û–î–ê–ñ–ò ===

local function GetRap(Class, ItemTable)
    local Item = require(Library.Items[Class .. "Item"])(ItemTable.id)
    if ItemTable.sh then Item:SetShiny(true) end
    if ItemTable.pt == 1 then Item:SetGolden() end
    if ItemTable.pt == 2 then Item:SetRainbow() end
    if ItemTable.tn then Item:SetTier(ItemTable.tn) end
    return RAPCmds.Get(Item) or 0
end

local function ConvertPrice(Price, Rap)
    if type(Price) == "string" then
        -- Handle percentage prices like "50%"
        local Percentage = tonumber(Price:match("^(%d+)%%"))
        if Percentage then
            return (Percentage / 100) * Rap
        end

        -- Handle shorthand notations like "1k", "1m", "1b", including decimals
        local number, suffix = Price:match("^(%d+%.?%d*)([kKmMbB]?)$")
        if number then
            number = tonumber(number)
            if suffix == "k" or suffix == "K" then
                return number * 1000
            elseif suffix == "m" or suffix == "M" then
                return number * 1000000
            elseif suffix == "b" or suffix == "B" then
                return number * 1000000000
            end
            return number
        end
    end
    return tonumber(Price)
end

local function StartSelling()
    if selling then return end  -- Prevent multiple instances of selling
    selling = true
    SellButton.Text = "üöÄ Selling..."
    StopButton.Visible = true  -- Show stop button when selling starts

    local itemId = ItemBox.Text
    local priceInput = PriceBox.Text
    if not itemId or not priceInput then 
        selling = false
        StopButton.Visible = false
        SellButton.Text = "üöÄ Start Selling"
        return 
    end

    while selling do
        for class, items in pairs(Savemod.Get().Inventory) do
            for uuid, item in pairs(items) do
                if item.id == itemId and item.pt == (rainbow and 2 or golden and 1 or 0)
                and (item.sh or false) == shiny then
                    local rap = GetRap(class, item)
                    local price = ConvertPrice(priceInput, rap)
                    local maxAmount = math.min(item._am or 1, 15000, math.floor(25e9 / price))
                    local success = Network.Invoke("Booths_CreateListing", uuid, math.ceil(price), maxAmount)
                    if success then
                        print("‚úÖ Listed", item.id, "for", math.ceil(price), "x" .. maxAmount)
                    else
                        warn("‚ùå Failed to list", item.id)
                    end
                    task.wait(1)
                end
            end
        end
        task.wait(5)  -- Wait before checking again
    end
end

local function StopSelling()
    selling = false
    StopButton.Visible = false
    SellButton.Text = "üöÄ Start Selling"
end

SellButton.MouseButton1Click:Connect(StartSelling)
StopButton.MouseButton1Click:Connect(StopSelling)

-- AutoStart –ø—Ä–∏ –≤—Ö–æ–¥–µ
task.delay(3, function()
    if autoStart then
        StartSelling()
    end
end)
